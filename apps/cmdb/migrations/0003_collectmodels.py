# Generated by Django 4.2.7 on 2025-03-03 05:53

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("cmdb", "0002_alter_showfield_options_alter_showfield_created_at_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="CollectModels",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created Time")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated Time")),
                ("created_by", models.CharField(default="", max_length=32, verbose_name="Creator")),
                ("updated_by", models.CharField(default="", max_length=32, verbose_name="Updater")),
                ("name", models.CharField(help_text="任务名称", max_length=128)),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("vm", "VM采集"),
                            ("snmp", "SNMP采集"),
                            ("k8s", "K8S采集"),
                            ("cloud", "云采集"),
                            ("protocol", "协议采集"),
                        ],
                        help_text="任务类型",
                        max_length=32,
                    ),
                ),
                (
                    "driver_type",
                    models.CharField(
                        choices=[("protocol", "协议采集"), ("job", "脚本采集")],
                        default="protocol",
                        help_text="驱动类型",
                        max_length=32,
                    ),
                ),
                ("model_id", models.CharField(help_text="模型ID", max_length=64)),
                ("is_interval", models.BooleanField(default=False, help_text="是否开启周期巡检")),
                ("cycle_value_type", models.CharField(help_text="周期任务类型", max_length=32)),
                ("cycle_value", models.CharField(blank=True, help_text="周期任务值", max_length=32, null=True)),
                ("scan_cycle", models.CharField(blank=True, help_text="扫描周期", max_length=50, null=True)),
                ("ip_range", models.TextField(blank=True, help_text="IP范围", null=True)),
                ("instances", models.JSONField(default=list, help_text="实例")),
                ("access_point", models.JSONField(default=dict, help_text="接入点")),
                ("credential", models.JSONField(default=list, help_text="凭据")),
                ("timeout", models.PositiveSmallIntegerField(default=0, help_text="超时时间(单个ip)")),
                (
                    "exec_status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "未执行"),
                            (1, "正在采集"),
                            (2, "成功"),
                            (3, "异常"),
                            (4, "超时"),
                            (7, "待审批"),
                            (5, "正在写入"),
                            (6, "强制终止"),
                        ],
                        default=0,
                        help_text="执行状态",
                    ),
                ),
                ("exec_time", models.DateTimeField(blank=True, help_text="执行时间", null=True)),
                ("task_id", models.CharField(blank=True, help_text="任务执行id", max_length=64, null=True)),
                ("params", models.JSONField(default=dict, help_text="采集任务额外的参数(各种实例或者不包括在凭据里的参数)")),
                ("plugin_id", models.IntegerField(default=0, help_text="采集插件ID")),
                (
                    "input_method",
                    models.PositiveSmallIntegerField(choices=[(0, "自动"), (1, "手动")], default=0, help_text="录入方式"),
                ),
                ("examine", models.BooleanField(default=False, help_text="是否已经审批")),
                ("collect_data", models.JSONField(default=dict, help_text="采集原数据")),
                ("collect_digest", models.JSONField(default=dict, help_text="采集摘要数据")),
                ("format_data", models.JSONField(default=dict, help_text="采集返回的分类后的数据")),
            ],
            options={"verbose_name": "采集任务", "unique_together": {("name", "driver_type", "model_id")},},
        ),
    ]
